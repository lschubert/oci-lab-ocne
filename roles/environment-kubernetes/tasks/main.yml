---
- name: Create environment
  shell: |
    olcnectl environment create --config-file myenvironment.yaml
  chdir: ~
  become: "{{ install_user }}"

- name: Create Kubernetes module
  shell: |
    olcnectl module create --config-file myenvironment.yaml
  chdir: ~
  become: "{{ install_user }}"

- name: Validate Kubernetes module
  shell: |
    olcnectl module validate --config-file myenvironment.yaml
  chdir: ~
  register: mod_kube
  become: "{{ install_user }}"

- name: Make sure validation is successfull
  fail:
    msg: Validation of Kubernetes module failed. {{ mod_kube }}
  when: "'Validation of module mycluster succeeded.' not in mod_kube.stdout"

- name: Install Kubernetes module
  shell: |
    olcnectl module install --config-file myenvironment.yaml
  chdir: ~
  become: "{{ install_user }}"

- name: Validate Deployment of Kubernetes module
  shell: |
    olcnectl module instances --config-file myenvironment.yaml
  chdir: ~
  register: deploy_mod_kube
  become: "{{ install_user }}"

- name: Output of Validation
  debug:
    var: deploy_mod_kube

- name: Setup kubectl - make sure $HOME/.kube exists
  file:
    path: ~/.kube
    state: directory
  become: "{{ install_user }}"

- name: Setup kubectl - add config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    owner: "{{ install_user }}"
    group: "{{ install_user }}"
  become: true

- name: Setup kubectl - export environment
  lineinfile:
    path: ~/.bashrc
    line: 'export KUBECONFIG=$HOME/.kube/config'
  become: "{{ install_user }}"

- name: Validate kubectl
  shell: |
    kubectl get nodes
  chdir: ~
  register: kubectl
  become: "{{ install_user }}"

- name: Output of Validation
  debug:
    var: kubectl